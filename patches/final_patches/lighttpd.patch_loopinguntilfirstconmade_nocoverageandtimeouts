diff --git a/src/base.h b/src/base.h
index 05a81432..b17dadfa 100644
--- a/src/base.h
+++ b/src/base.h
@@ -173,6 +173,7 @@ struct server {
 	uint32_t lim_conns;
 	connection *conns;
 	connection *conns_pool;
+	int first_connection_made;
 
 	log_error_st *errh;
 
diff --git a/src/network.c b/src/network.c
index c84483bb..58f65b58 100644
--- a/src/network.c
+++ b/src/network.c
@@ -91,6 +91,8 @@ static handler_t network_server_handle_fdevent(void *context, int revents) {
       #endif
 
         connection *con = connection_accepted(srv, srv_socket, &addr, fd);
+        if(con!=NULL && !srv->first_connection_made)
+          srv->first_connection_made = 1;  
         if (__builtin_expect( (!con), 0)) return HANDLER_GO_ON;
         connection_state_machine(con);
     } while (--loops);
diff --git a/src/server.c b/src/server.c
index 44385db1..2b1a14a9 100644
--- a/src/server.c
+++ b/src/server.c
@@ -2193,7 +2193,9 @@ static void server_main_loop (server * const srv) {
 		} else {
 			server_load_check(srv);
 		}
-
+		if(srv->first_connection_made) {
+		while(__AFL_LOOP(INT64_MAX)) {
+		fdevent_poll(srv->ev, -1);
 	  #ifndef _MSC_VER
 		static
 	  #endif
@@ -2202,9 +2204,12 @@ static void server_main_loop (server * const srv) {
 		connection * const joblist = log_con_jqueue;
 		log_con_jqueue = sentinel;
 		server_run_con_queue(joblist, sentinel);
-
-		if (fdevent_poll(srv->ev, log_con_jqueue != sentinel ? 0 : 1000) > 0)
-			last_active_ts = log_monotonic_secs;
+		}
+		srv_shutdown = 1;
+		}
+		fdevent_poll(srv->ev,0);
+		// if (fdevent_poll(srv->ev, log_con_jqueue != sentinel ? 0 : 1000) > 0)
+		// 	last_active_ts = log_monotonic_secs;
 	}
 }
 
