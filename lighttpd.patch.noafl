diff --git a/src/connections.c b/src/connections.c
index 51afa665..7d77c12d 100644
--- a/src/connections.c
+++ b/src/connections.c
@@ -188,7 +188,8 @@ static void connection_handle_response_end_state(request_st * const r, connectio
 		r->http_status = 100; /* XXX: what if con->state == CON_STATE_ERROR? */
 		/*if (r->http_status)*/
 			plugins_call_handle_request_done(r);
-		connection_handle_shutdown(con);
+        // AVOIDING CLOSING CONNECTION, STAY ON THAT STATE
+//		connection_handle_shutdown(con);
 		return;
 	}
 
@@ -220,7 +221,8 @@ static void connection_handle_response_end_state(request_st * const r, connectio
 #endif
 		connection_set_state(r, CON_STATE_REQUEST_START);
 	} else {
-		connection_handle_shutdown(con);
+        // AVOIDING CLOSING CONNECTION, STAY ON THAT STATE
+//		connection_handle_shutdown(con);
 	}
 }
 
diff --git a/src/server.c b/src/server.c
index 44385db1..30790238 100644
--- a/src/server.c
+++ b/src/server.c
@@ -2155,6 +2155,7 @@ static void server_main_loop (server * const srv) {
 	unix_time64_t last_active_ts = server_monotonic_secs();
 	log_epoch_secs = server_epoch_secs(srv, 0);
 
+	fdevent_poll(srv->ev, -1); //waiting for a connection
 	while (!srv_shutdown) {
 
 		if (handle_sig_hup) {
@@ -2194,6 +2195,10 @@ static void server_main_loop (server * const srv) {
 			server_load_check(srv);
 		}
 
+	  
+		int counter=10;
+		while (counter-- >0) {
+		fdevent_poll(srv->ev, -1);
 	  #ifndef _MSC_VER
 		static
 	  #endif
@@ -2202,9 +2207,11 @@ static void server_main_loop (server * const srv) {
 		connection * const joblist = log_con_jqueue;
 		log_con_jqueue = sentinel;
 		server_run_con_queue(joblist, sentinel);
+		}
+		srv_shutdown = 1;
 
-		if (fdevent_poll(srv->ev, log_con_jqueue != sentinel ? 0 : 1000) > 0)
-			last_active_ts = log_monotonic_secs;
+		// if (fdevent_poll(srv->ev, log_con_jqueue != sentinel ? 0 : 1000) > 0)
+		// 	last_active_ts = log_monotonic_secs;
 	}
 }
 
